# name: 'Terraform Infrastrucure Deployment'
# on:
#   push:
#     paths: 'infra/terraform/**'
#     branches: [ "main" ]
#   pull_request:
#     paths: 'infra/terraform/**'
#     branches: [ "main" ]
# permissions:
#   contents: read


# env:
# AWS_REGION: MY_AWS_REGION                   # set this to your preferred AWS region, e.g. us-west-1
# ECR_REPOSITORY: MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
# ECS_SERVICE: MY_ECS_SERVICE                 # set this to your Amazon ECS service name
# ECS_CLUSTER: MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
# ECS_TASK_DEFINITION: MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
#                                               # file, e.g. .aws/task-definition.json
# CONTAINER_NAME: MY_CONTAINER_NAME           # set this to the name of the container in the
#                                               # containerDefinitions section of your task definition


# jobs:
#   terraform-deployment:
#     name: 'Terraform'
#     runs-on: ubuntu-latest
#     environment: dev
#     defaults:
#       run:
#         shell: bash
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v4
#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v4
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-southeast-1
#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@v1
#     - name: Build, and tag image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         IMAGE_TAG: ${{ github.sha }}
#       run: 
#         make build-image
#     - name: Push image to Amazon ECR
#       id: push-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#       run: 
#         make push-image
