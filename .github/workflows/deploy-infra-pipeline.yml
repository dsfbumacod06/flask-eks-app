name: 'Terraform Infrastrucure Deployment'
on:
  push:
    paths: 'infra/terraform/**'
    branches: [ "main" ]
  pull_request:
    paths: 'infra/terraform/**'
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  terraform-deployment:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: dev
    outputs: 
      RDS_ENDPOINT: ${{ steps.set_output.outputs.RDS_ENDPOINT }}
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    - name: View Terraform Changes
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: make preview-infra
    - name: Deploy Terraform Infra
      env:
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        make deploy-infra
        set DB_ENDPOINT = $(cat deployment-results.txt | grep 'rds_postsgres_db_endpoint' | sed 's/:5432//; s/.*= "//; s/"//')
        echo "RDS_ENDPOINT=$(DB_ENDPOINT)"
        echo "RDS_ENDPOINT=$(DB_ENDPOINT)" >> $(GITHUB_ENV) && echo "::set-output name=RDS_ENDPOINT::$(DB_ENDPOINT)"
      if: github.event_name == 'push'